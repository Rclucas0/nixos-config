#+title: Config.el
#+Author: Riley Lucas
#+PROPERTY: header-args :tangle config.el


* TABLE OF CONTENTS :toc:
- [[#theme][THEME]]
- [[#font][Font]]
- [[#package-manager-configuration][Package Manager Configuration]]
- [[#line-number][Line Number]]
- [[#org-mode][Org-mode]]
- [[#keybindings][Keybindings]]
- [[#exwm][EXWM]]
- [[#jk][jk]]

* THEME

#+begin_src emacs-lisp
;; Theme Configuration ----------------------------------------------------------

(setq doom-theme 'doom-oceanic-next)

(add-to-list 'default-frame-alist '(alpha . 95))

(setq visual-fill-column-width 110
      visual-fill-column-center-text t)

(setq user-full-name "Riley Lucas"
      user-mail-address "rclucas0@gmail.com")

#+end_src

* Font

#+begin_src emacs-lisp
;; Font Configuration ----------------------------------------------------------

;;(setq doom-font (font-spec :family "JetBrainsMono Nerd Font" :size 15)
(setq doom-font (font-spec :family "Hack" :size 15)
      doom-variable-pitch-font (font-spec :family "Hack" :size 15)
      doom-big-font (font-spec :family "Hack" :size 24))
(after! doom-themes
 (setq doom-themes-enable-bold t
          doom-themes-enable-italic t))
;; (custom-set-faces!
;;  '(font-lock-comment-face :slant italic)
;;   '(font-lock-keyword-face :slant itanic))
;; Set the fixed pitch face
(set-face-attribute 'fixed-pitch nil :font "Hack" :height 260)

;; Set the variable pitch face
(set-face-attribute 'variable-pitch nil :font "Hack" :height 295 :weight 'regular)

#+end_src

* Package Manager Configuration

#+begin_src emacs-lisp
;; Package Manager Configuration  ----------------------------------------------------------

;; Initialize package sources
(require 'package)

(setq package-archives '(("melpa" . "https://melpa.org/packages/")
                         ("org" . "https://orgmode.org/elpa/")
                         ("elpa" . "https://elpa.gnu.org/packages/")))

(package-initialize)
(unless package-archive-contents
 (package-refresh-contents))

;; Initialize use-package on non-Linux platforms
(unless (package-installed-p 'use-package)
   (package-install 'use-package))

(require 'use-package)
(setq use-package-always-ensure t)

(column-number-mode)
(global-display-line-numbers-mode t)

(require 'ereader)

#+end_src

* Line Number

#+begin_src emacs-lisp
;; Line-Number Configuration ----------------------------------------------------------

(setq display-line-numbers-type t)
(dolist (mode '(org-mode-hook
                term-mode-hook
                vterm-mode-hook
                shell-mode-hook
                eshell-mode-hook))
  (add-hook mode (lambda () (display-line-numbers-mode 0))))

#+end_src

* Org-mode

#+begin_src emacs-lisp
;; Org Configuration ----------------------------------------------------------

(setq org-directory "~/Notes/org/")

(setq org-agenda-start-with-log-mode t)
(setq org-log-done 'time)
(setq org-log-into-drawer t)

(defun rl/org-mode-setup ()
  (org-indent-mode)
  (variable-pitch-mode 1)
  (visual-line-mode 1))

(defun rl/org-font-setup ()
  ;; Replace list hyphen with dot
  (font-lock-add-keywords 'org-mode
                          '(("^ *\\([-]\\) "
                             (0 (prog1 () (compose-region (match-beginning 1) (match-end 1) "•"))))))

  ;; Set faces for heading levels
  (dolist (face '((org-level-1 . 1.2)
                  (org-level-2 . 1.1)
                  (org-level-3 . 1.05)
                  (org-level-4 . 1.0)
                  (org-level-5 . 1.1)
                  (org-level-6 . 1.1)
                  (org-level-7 . 1.1)
                  (org-level-8 . 1.1)))
    (set-face-attribute (car face) nil :font "Hack" :weight 'regular :height (cdr face)))

  ;; Ensure that anything that should be fixed-pitch in Org files appears that way
  (set-face-attribute 'org-block nil :foreground nil :inherit 'fixed-pitch)
  (set-face-attribute 'org-code nil   :inherit '(shadow fixed-pitch))
  (set-face-attribute 'org-table nil   :inherit '(shadow fixed-pitch))
  (set-face-attribute 'org-verbatim nil :inherit '(shadow fixed-pitch))
  (set-face-attribute 'org-special-keyword nil :inherit '(font-lock-comment-face fixed-pitch))
  (set-face-attribute 'org-meta-line nil :inherit '(font-lock-comment-face fixed-pitch))
  (set-face-attribute 'org-checkbox nil :inherit 'fixed-pitch))

(use-package org
  :hook (org-mode . rl/org-mode-setup)
  :config
  (setq org-ellipsis " ▾")
  (rl/org-font-setup))

(defun rl/org-mode-visual-fill ()
  (setq visual-fill-column-width 100
        visual-fill-column-center-text t)
  (visual-fill-column-mode 1))

(use-package visual-fill-column
  :hook (org-mode . rl/org-mode-visual-fill))

#+end_src

* Keybindings

#+begin_src emacs-lisp
;; Keybinding Configuration ----------------------------------------------------------

(map! :leader
      :desc "Calendar"
      "o c" #'=calendar)
(map! :leader
      :desc "visual-fill"
      "t c" #'visual-fill-column-mode)

#+end_src

* EXWM

#+begin_src emacs-lisp
;; EXWM Configuration ----------------------------------------------------------

;; (require 'exwm)
;; (require 'exwm-config)
;; (exwm-config-default)
;; (require 'exwm-randr)
;; (setq exwm-randr-workspace-output-plist '(0 "DP-1" 1 "DP-3"))
;; (add-hook 'exwm-randr-screen-change-hook
;; 	  (lambda ()
;; 	    (start-process-shell-command
;; 	     "xrandr" nil "xrandr --output DP-1 --mode 1920x1080 --pos 0x0 --rotate normal --output DP-3 --primary --mode 1920x1080 --pos 1920x0 --rotate normal")))
;; (exwm-randr-enable)
;; (require 'exwm-systemtray)
;; (exwm-systemtray-enable)
#+end_src

* jk
;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-

;; Some functionality uses this to identify you, e.g. GPG configuration, email
;; clients, file templates and snippets. It is optional.
;; (setq user-full-name "John Doe"
;;       user-mail-address "john@doe.com")
